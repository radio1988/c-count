/home/rui.li-umw/ccount/231004_myeloid_fp/2_retraining/no_equ/run4_BM_FL_PFA/res/weights

DATA_TRAIN: npy/run4_BM_FL_PFA.ruiV1.npy.gz
DATA_VAL: npy/PFA.ruiv1.realistic.val.npy.gz
#sampling_rates: [.00625, .0125, .025, .05, .1, .2, .4, .8, 1.0]
sampling_rates: [.25, .5, 1.0]
CCOUNT_CONFIG: config.yaml
## User params ## 
# data curve patience5, augmentation 80k

DATA_DIR: data/  # for czi files

FORMAT: 2019 # 2019
I: [1,2,3,4] # all valid index options for czi file

WEIGHT: res/weights/1.0.hdf5 # for classification input

## Advanced params ##
# (Please don't change unless you're developer)

# blob detection
test_mode: False  # only use small subset in blob detection for faster processing
block_height: 2000 # for block equalization
block_width: 2400  # if < 0, skip block equalization
blob_detection_scaling_factor: 4  # 1, 2, 4 (08/23/2021 for blob_detection)
max_sigma: 12 # 6 for 8 bit, larger for detecting larger blobs
min_sigma: 3  # 2-8
num_sigma: 20  # smaller->faster, less accurate, 5-20
threshold: 0.1  # 0.02 too sensitive, 0.1 to ignore debris
overlap: .2 # overlap larger than this, smaller blob gone, not sensitive

blob_extention_ratio: 1.4 # for vis in jpg
blob_extention_radius: 10 # for vis in jpg
crop_width: 80  # padding width, which is cropped img width/2 (50), in blob_cropping.py

# classification
# training and classification
BOOSTING: False
numClasses: 2  # if 2 is selected, 3[uncertain] 4[artifacts] will be 0; 5[unlabeled] will be discarded at all times
classification_equalization: False  # for training/classification
clas_scaling_factor: 2  # input scale down factor for training/classification
r_ext_ratio: 1.4  # larger (1.4) for better view under augmentation
r_ext_pixels: 10
# training only
balancing: True
aug_sample_size: 80000
batch_size: 512  # default 256
epochs: 100 
patience: 3  
learning_rate: 0.001  # default 0.001 (Adam)
verbose: 2  # {0, 1, 2} 

# Notes

## 2018 params recommendation
# if scaling_factor == 1:
#     max_sigma=50 
#     min_sigma=5
#     num_sigma=15
#     threshold=0.1
# elif scaling_factor == 2:
#     max_sigma=40
#     min_sigma=2
#     num_sigma=10
#     threshold=0.1
# elif scaling_factor == 4 and FL:
  # max_sigma: 5 # 20-50 
  # min_sigma: 2  # 2-8
  # num_sigma: 20  # smaller->faster, less accurate, 5-20
  # threshold: 0.02
# else:
#     raise Exception("scaling factor not implemented")
